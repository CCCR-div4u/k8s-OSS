# Prometheus + Grafana + Thanos 통합 설정
prometheus:
  prometheusSpec:
    # Thanos Sidecar 설정
    thanos:
      image: quay.io/thanos/thanos:v0.32.5
      version: v0.32.5
      objectStorageConfig:
        name: thanos-objstore-config
        key: objstore.yml
    
    # 데이터 보존 기간
    retention: 15d
    
    # 스토리지 설정
    storageSpec:
      volumeClaimTemplate:
        spec:
          resources:
            requests:
              storage: 50Gi
          storageClassName: gp3
    
    # 리소스 설정
    resources:
      requests:
        memory: 400Mi
        cpu: 100m
      limits:
        memory: 2Gi
        cpu: 1000m

# Grafana 설정
grafana:
  # 관리자 패스워드
  adminPassword: admin123!
  
  # 기본 데이터 소스 비활성화
  defaultDashboardsEnabled: false
  
  # 기본 Prometheus 데이터소스 비활성화
  sidecar:
    datasources:
      defaultDatasourceEnabled: false
  
  # 커스텀 데이터 소스 설정 (Thanos Query + Direct Prometheus)
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
      - name: Thanos-Query
        type: prometheus
        url: http://thanos-query:9090
        access: proxy
        isDefault: true
        jsonData:
          timeInterval: 30s
      - name: Prometheus-Direct
        type: prometheus
        url: http://monitoring-kube-prometheus-prometheus:9090
        access: proxy
        isDefault: false
        jsonData:
          timeInterval: 15s
  
  # 리소스 설정
  resources:
    requests:
      memory: 128Mi
      cpu: 100m
    limits:
      memory: 512Mi
      cpu: 500m
  
  # 서비스 설정
  service:
    type: ClusterIP
    port: 80

# AlertManager 설정
alertmanager:
  enabled: true
  config:
    global:
      slack_api_url: 'https://hooks.slack.com/services/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'
    
    route:
      group_by: ['alertname', 'instance']
      group_wait: 10s
      group_interval: 10s
      repeat_interval: 1h
      receiver: 'slack-notifications'
    
    inhibit_rules:
    # EKS 관리형 컴포넌트 알림 억제
    - target_match:
        alertname: 'KubeSchedulerDown'
    - target_match:
        alertname: 'KubeControllerManagerDown'
    - target_match:
        alertname: 'KubeEtcdDown'
    
    receivers:
    - name: 'null'
    - name: 'slack-notifications'
      slack_configs:
      - channel: '#alert'
        username: 'EKS Monitor'
        title: '{{ .GroupLabels.alertname }}'
        text: |
          {{ range .Alerts }}
          *파드/노드*: {{ .Labels.instance }}{{ .Labels.node }}{{ .Labels.pod }}
          *상태*: {{ if .Labels.severity }}{{ .Labels.severity }}{{ else }}warning{{ end }}
          *값*: {{ .Annotations.value }}
          *설명*: {{ .Annotations.summary }}
          
          📊 [Grafana 대시보드](https://grafana.bluesunnywings.com)
          🔍 [Prometheus 쿼리](https://prometheus.bluesunnywings.com)
          {{ end }}
        color: '{{ if eq .Status "firing" }}danger{{ else }}good{{ end }}'
  
  alertmanagerSpec:
    resources:
      requests:
        memory: 200Mi
        cpu: 100m
      limits:
        memory: 500Mi
        cpu: 500m