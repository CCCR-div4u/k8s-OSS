# Thanos Helm Chart Values
# 기존 Prometheus와 연동하기 위한 설정

query:
  enabled: true
  replicaCount: 2
  
  # 리소스 설정
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # 서비스 설정
  service:
    type: ClusterIP
    port: 9090
  
  # Prometheus 호환 API 활성화
  extraFlags:
    - --query.replica-label=prometheus_replica
    - --query.replica-label=rule_replica
  
  # 데이터 소스 설정 (자동 발견)
  stores:
    - "thanos-store-gateway:10901"
    - "prometheus-kube-prometheus-prometheus-0.prometheus-operated.monitoring.svc.cluster.local:10901"
    - "prometheus-kube-prometheus-prometheus-1.prometheus-operated.monitoring.svc.cluster.local:10901"

storegateway:
  enabled: true
  replicaCount: 1
  
  # 리소스 설정
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  
  # S3 설정 (환경 변수로 주입)
  config: |
    type: s3
    config:
      bucket: "THANOS_S3_BUCKET_PLACEHOLDER"
      region: "ap-northeast-2"
      endpoint: "s3.ap-northeast-2.amazonaws.com"
  
  # 인덱스 캐시 설정
  indexCache:
    config: |
      type: in-memory
      config:
        max_size: 1GB

compactor:
  enabled: true
  
  # 리소스 설정
  resources:
    limits:
      cpu: 500m
      memory: 1Gi
    requests:
      cpu: 200m
      memory: 512Mi
  
  # S3 설정
  config: |
    type: s3
    config:
      bucket: "THANOS_S3_BUCKET_PLACEHOLDER"
      region: "ap-northeast-2"
      endpoint: "s3.ap-northeast-2.amazonaws.com"
  
  # 압축 및 다운샘플링 설정
  extraFlags:
    - --compact.enable-vertical-compaction
    - --deduplication.replica-label=prometheus_replica
    - --deduplication.replica-label=rule_replica
  
  # 보존 정책
  retentionResolutionRaw: 30d      # 원본 데이터 30일
  retentionResolution5m: 120d      # 5분 해상도 120일
  retentionResolution1h: 2555d     # 1시간 해상도 7년

# Prometheus Operator 통합 설정
existingPrometheus:
  enabled: true
  serviceName: "prometheus-kube-prometheus-prometheus"
  servicePort: 9090
  namespace: "monitoring"

# ServiceAccount 설정 (AWS IAM 역할 연동)
serviceAccount:
  create: true
  name: "thanos"
  annotations:
    eks.amazonaws.com/role-arn: "THANOS_IAM_ROLE_ARN_PLACEHOLDER"

# 보안 설정
securityContext:
  runAsNonRoot: true
  runAsUser: 1001
  fsGroup: 1001

# 네트워크 정책
networkPolicy:
  enabled: false

# 모니터링 설정
metrics:
  enabled: true
  serviceMonitor:
    enabled: true
    namespace: monitoring
    labels:
      release: prometheus