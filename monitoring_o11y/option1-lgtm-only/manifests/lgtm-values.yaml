# LGTM Stack Values Configuration
# Grafana Labs LGTM Distributed Chart

global:
  domain: bluesunnywings.com

# Grafana Configuration
grafana:
  enabled: true
  adminPassword: "admin123!"
  
  persistence:
    enabled: true
    size: 5Gi
    storageClassName: gp3
  
  ingress:
    enabled: false  # ALB Ingress로 별도 관리
  
  datasources:
    datasources.yaml:
      apiVersion: 1
      datasources:
        - name: Mimir
          type: prometheus
          url: http://lgtm-mimir-query-frontend:8080/prometheus
          isDefault: true
        - name: Loki
          type: loki
          url: http://lgtm-loki-query-frontend:3100
        - name: Tempo
          type: tempo
          url: http://lgtm-tempo-query-frontend:3100

# Mimir Configuration (Prometheus replacement)
mimir:
  enabled: true
  
  # Persistence
  persistence:
    enabled: true
    size: 50Gi
    storageClassName: gp3
  
  # Resource limits
  resources:
    limits:
      cpu: 2000m
      memory: 4Gi
    requests:
      cpu: 1000m
      memory: 2Gi

# Loki Configuration
loki:
  enabled: true
  
  # Persistence
  persistence:
    enabled: true
    size: 30Gi
    storageClassName: gp3
  
  # Resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi

# Tempo Configuration
tempo:
  enabled: true
  
  # Resource limits
  resources:
    limits:
      cpu: 1000m
      memory: 2Gi
    requests:
      cpu: 500m
      memory: 1Gi
  
  # Persistence
  persistence:
    enabled: true
    size: 20Gi
    storageClassName: gp3

# Promtail Configuration (Log collection)
promtail:
  enabled: true
  
  # DaemonSet configuration
  daemonset:
    enabled: true
  
  # Resource limits
  resources:
    limits:
      cpu: 200m
      memory: 256Mi
    requests:
      cpu: 100m
      memory: 128Mi
  
  # Log collection configuration
  config:
    clients:
      - url: http://lgtm-loki-distributor:3100/loki/api/v1/push
    
    scrape_configs:
      - job_name: kubernetes-pods
        kubernetes_sd_configs:
          - role: pod
        relabel_configs:
          - source_labels: [__meta_kubernetes_pod_controller_name]
            regex: ([0-9a-z-.]+?)(-[0-9a-f]{8,10})?
            target_label: __tmp_controller_name
          - source_labels: [__meta_kubernetes_pod_label_app_kubernetes_io_name]
            target_label: __tmp_app_name
          - source_labels: [__tmp_app_name, __tmp_controller_name]
            regex: ^;(.*)
            target_label: app
            replacement: $1
          - source_labels: [__meta_kubernetes_pod_node_name]
            target_label: node_name
          - source_labels: [__meta_kubernetes_namespace]
            target_label: namespace
          - source_labels: [__meta_kubernetes_pod_name]
            target_label: pod
          - source_labels: [__meta_kubernetes_pod_container_name]
            target_label: container
          - replacement: /var/log/pods/*$1/*.log
            separator: /
            source_labels: [__meta_kubernetes_pod_uid, __meta_kubernetes_pod_container_name]
            target_label: __path__

# ServiceMonitor for metrics collection
serviceMonitor:
  enabled: true
  
  # Scrape intervals
  interval: 30s
  scrapeTimeout: 10s
  
  # Additional labels
  additionalLabels:
    monitoring: lgtm-stack

# Prometheus Node Exporter (for node metrics)
prometheus-node-exporter:
  enabled: true
  
  # Resource limits
  resources:
    limits:
      cpu: 200m
      memory: 50Mi
    requests:
      cpu: 100m
      memory: 30Mi

# Kube State Metrics (for Kubernetes resource metrics)
kube-state-metrics:
  enabled: true
  
  # Resource limits
  resources:
    limits:
      cpu: 100m
      memory: 150Mi
    requests:
      cpu: 10m
      memory: 32Mi